<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="test">
  <!-- id 속성값은 식별자 : 보통 메소드 이름과 동일하게 한다. 
  	sql 실행에 필요한 값들에 대해 자바 클래스와 테이블의 컬럼을 매핑하여 처리한다.
   1) 값 대입할 ?(물음표)는 el 기호 #{}로 변경한다. -> 실행할 때 대입되는 기호
   2) 값 대입할 형식을 parameterType속성에 설정한다.(패키지명.클래스명 형식)
   3) sql 실행결과 매핑될 데이터 타입을 resultType으로 설정한다.(패키지명.클래스명 형식)
  -->
  <insert id="insert" parameterType="hrd.vo.Member">
  INSERT INTO MEMBER_TBL_02 
  (CUSTNO, CUSTNAME, PHONE, ADDRESS, JOINDATE, GRADE, CITY) 
  VALUES(#{custNo},#{custName},#{phone},#{address},SYSDATE,#{grade},#{city})
  <!-- 파라미터 타입이 클래스일때 #{}는 프로퍼티 이름을 정확히 대소문자 구분해서 작성하기. -->
  </insert>
  
  <update id="update" parameterType="hrd.vo.Member">
  UPDATE MEMBER_TBL_02
  SET PHONE=#{phone}, ADDRESS=#{address},CITY=#{city} WHERE CUSTNO=#{custNo}
  </update>
  
  <!-- select 실행 결과를 자동으로  Member 객체를 생성해서 매핑을 한다. -->
  <select id="selectOne" parameterType="int" resultType="hrd.vo.Member">
  select * from member_tbl_02 where custno = #{custNo}
  </select>
  <!-- select 실행결과가 여러행이 되는 List인 경우에는 <T>에 해당하는 제너릭 타입을 설정한다. -->
  <select id="selectAll" resultType="hrd.vo.Member">
  select * from member_tbl_02
  </select>
  
  <!-- 동적쿼리 검색 -->
  <select id="search" parameterType="java.util.Map" resultType="hrd.vo.Member">
  select * from member_tbl_02 
		<if test="column=='name'"> 
	   WHERE CUSTNAME LIKE '%'||#{find}||'%'
	  	</if>  
		<if test="column=='address'"> 
	   WHERE ADDRESS LIKE '%'||#{find}||'%'
	  	</if>  
		<if test="column=='city'"> 
	   WHERE CITY = #{find}
	  	</if>  
		<if test="column=='grade'"> 
	   WHERE GRADE = #{find}
	  	</if>  
  
  </select>
  
  
  <!-- 테스트용 서치 -->
  <select id="searchName" parameterType="String" resultType="hrd.vo.Member">
  SELECT * FROM MEMBER_TBL_02 WHERE CUSTNAME LIKE '%'||#{find}||'%';
 <!--  WHERE CUSTNAME =#{custName} -->
  </select>
  <select id="getNextSeq" resultType="int">
  select member_seq.nextval from dual
  </select>
  </mapper>